# Auto-detect the Azure Functions folder and deploy (Python 3.10)

name: Deploy Azure Function (Python 3.10)

on:
  push:
    branches: ["main"]
  workflow_dispatch:

env:
  # ðŸ‘‡ Set this to your exact Function App name from the Azure portal
  AZURE_FUNCTIONAPP_NAME: "nutritional-insights-func"
  PYTHON_VERSION: "3.10"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # ðŸ”Ž Find the folder that contains host.json (the Functions app root)
      - name: Locate function app folder
        id: locate
        shell: bash
        run: |
          set -e
          echo "Repo tree (top 3 levels) for debugging:"
          find . -maxdepth 3 -type d -print

          # Look for host.json tracked in git
          FUNC_PATH=$(git ls-files | grep -E '(^|/)host\.json$' | head -n1 | xargs -I{} dirname {})
          if [ -z "$FUNC_PATH" ]; then
            echo "ERROR: Could not find host.json in the repo. Ensure your function app folder is committed."
            exit 1
          fi
          echo "Detected function app path: $FUNC_PATH"
          echo "FUNC_PATH=$FUNC_PATH" >> "$GITHUB_ENV"

      # ðŸ“¦ Install dependencies from that folder (expects requirements.txt there)
      - name: Install dependencies
        working-directory: ${{ env.FUNC_PATH }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt --target=".python_packages/lib/site-packages"
          else
            echo "No requirements.txt found in $PWD (that's OK if you don't have deps)."
          fi

      # ðŸš€ Deploy using the Publish Profile secret
      - name: Deploy to Azure Functions
        uses: Azure/functions-action@v1
        with:
          app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
          package: ${{ env.FUNC_PATH }}
          publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          scm-do-build-during-deployment: true
          enable-oryx-build: true
